# 3. Реализовать программу работы с органическими клетками. Необходимо создать класс Клетка.
# В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).
# В классе должны быть реализованы методы перегрузки арифметических операторов: сложение (__add__()), вычитание (__sub__()),
# умножение (__mul__()), деление (__floordiv__).
# Сложение. Объединение двух клеток. При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
# Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля, иначе выводить соответствующее сообщение.
# Умножение. Создается общая клетка из двух. Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
# Деление. Создается общая клетка из двух. Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.
# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.

class Cell:
    def __init__(self, cnt):
        self.cnt = max(int(cnt), 0)

    def __add__(self, other):
        return Cell(self.cnt + other.cnt)

    def __sub__(self, other):
        if self.cnt > other.cnt:
            return Cell(self.cnt - other.cnt)
        else:
            print('Вычитание: Ошибка! Недостаточно клеток!')
            return self

    def __mul__(self, other):
        return Cell(self.cnt * other.cnt)

    def __floordiv__(self, other):
        if other.cnt > 0:
            return Cell(self.cnt // other.cnt)
        else:
            print('Деление: Ошибка! Недостаточно клеток!')
            return self

    def __str__(self):
        return str(self.cnt)

    def make_order(self, r_len):
        str = '*'
        print(((str * r_len)+'\n') * (self.cnt // r_len), str * (self.cnt % r_len), sep='')


c_1 = Cell(10)
c_2 = Cell(3)

print(c_1+c_2)
print(c_1-c_2)
print(c_1*c_2)
print(c_1//c_2)
c_1.make_order(15)


